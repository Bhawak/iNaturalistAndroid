// Generated by data binding compiler. Do not edit!
package org.inaturalist.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.viewpager.widget.ViewPager;
import com.google.android.material.tabs.TabLayout;
import com.viewpagerindicator.CirclePageIndicator;
import java.lang.Deprecated;
import java.lang.Object;
import org.inaturalist.android.R;
import uk.co.senab.photoview.HackyViewPager;

public abstract class TaxonPageBinding extends ViewDataBinding {
  @NonNull
  public final LinearLayout compareTaxon;

  @NonNull
  public final TextView conservationSource;

  @NonNull
  public final TextView conservationStatus;

  @NonNull
  public final LinearLayout conservationStatusContainer;

  @NonNull
  public final ProgressBar loadingPhotos;

  @NonNull
  public final ProgressBar loadingSeasonability;

  @NonNull
  public final RelativeLayout noTaxonPhotosContainer;

  @NonNull
  public final CirclePageIndicator photosIndicator;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final TabLayout seasonabilityTabs;

  @NonNull
  public final ViewPager seasonabilityViewPager;

  @NonNull
  public final LinearLayout selectTaxon;

  @NonNull
  public final LinearLayout taxonButtons;

  @NonNull
  public final ImageView taxonIconicTaxon;

  @NonNull
  public final LinearLayout taxonInactive;

  @NonNull
  public final TextView taxonName;

  @NonNull
  public final HackyViewPager taxonPhotos;

  @NonNull
  public final RelativeLayout taxonPhotosContainer;

  @NonNull
  public final TextView taxonScientificName;

  @NonNull
  public final ImageView taxonomyInfo;

  @NonNull
  public final ListView taxonomyList;

  @NonNull
  public final LinearLayout viewObservations;

  @NonNull
  public final LinearLayout viewOnInat;

  @NonNull
  public final TextView wikipediaSummary;

  protected TaxonPageBinding(Object _bindingComponent, View _root, int _localFieldCount,
      LinearLayout compareTaxon, TextView conservationSource, TextView conservationStatus,
      LinearLayout conservationStatusContainer, ProgressBar loadingPhotos,
      ProgressBar loadingSeasonability, RelativeLayout noTaxonPhotosContainer,
      CirclePageIndicator photosIndicator, ScrollView scrollView, TabLayout seasonabilityTabs,
      ViewPager seasonabilityViewPager, LinearLayout selectTaxon, LinearLayout taxonButtons,
      ImageView taxonIconicTaxon, LinearLayout taxonInactive, TextView taxonName,
      HackyViewPager taxonPhotos, RelativeLayout taxonPhotosContainer, TextView taxonScientificName,
      ImageView taxonomyInfo, ListView taxonomyList, LinearLayout viewObservations,
      LinearLayout viewOnInat, TextView wikipediaSummary) {
    super(_bindingComponent, _root, _localFieldCount);
    this.compareTaxon = compareTaxon;
    this.conservationSource = conservationSource;
    this.conservationStatus = conservationStatus;
    this.conservationStatusContainer = conservationStatusContainer;
    this.loadingPhotos = loadingPhotos;
    this.loadingSeasonability = loadingSeasonability;
    this.noTaxonPhotosContainer = noTaxonPhotosContainer;
    this.photosIndicator = photosIndicator;
    this.scrollView = scrollView;
    this.seasonabilityTabs = seasonabilityTabs;
    this.seasonabilityViewPager = seasonabilityViewPager;
    this.selectTaxon = selectTaxon;
    this.taxonButtons = taxonButtons;
    this.taxonIconicTaxon = taxonIconicTaxon;
    this.taxonInactive = taxonInactive;
    this.taxonName = taxonName;
    this.taxonPhotos = taxonPhotos;
    this.taxonPhotosContainer = taxonPhotosContainer;
    this.taxonScientificName = taxonScientificName;
    this.taxonomyInfo = taxonomyInfo;
    this.taxonomyList = taxonomyList;
    this.viewObservations = viewObservations;
    this.viewOnInat = viewOnInat;
    this.wikipediaSummary = wikipediaSummary;
  }

  @NonNull
  public static TaxonPageBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.taxon_page, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static TaxonPageBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<TaxonPageBinding>inflateInternal(inflater, R.layout.taxon_page, root, attachToRoot, component);
  }

  @NonNull
  public static TaxonPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.taxon_page, null, false, component)
   */
  @NonNull
  @Deprecated
  public static TaxonPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<TaxonPageBinding>inflateInternal(inflater, R.layout.taxon_page, null, false, component);
  }

  public static TaxonPageBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static TaxonPageBinding bind(@NonNull View view, @Nullable Object component) {
    return (TaxonPageBinding)bind(component, view, R.layout.taxon_page);
  }
}
